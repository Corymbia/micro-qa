<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>&lt;em&gt;Build a new Eucalyptus Cloud from Packages.&lt;/em&gt;</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>method</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>packages</string>
              <string>source</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>frontend</name>
          <description>IP address of machine you would like to install the CLC, CC, SC, and Walrus.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>node</name>
          <description>IP address of machine you would like to install the node controller on</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.PasswordParameterDefinition>
          <name>password</name>
          <description>Leave blank if you&apos;ve uploaded your ssh keys </description>
          <defaultValue>hs8BfSQU6z+Ydc1V4SUWGw==</defaultValue>
        </hudson.model.PasswordParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>configuration</name>
          <description>Configuration of the Eucalyptus deployment.

Required fields:
public-ips

Full list of attributes can be found here:
https://github.com/viglesiasce/eucalyptus-cookbook/blob/master/attributes/default.rb</description>
          <defaultValue>{
  &quot;eucalyptus&quot;: { 
                         &quot;network&quot;: { &quot;bridged-nic&quot;: &quot;eth0&quot;, 
                                            &quot;public-ips&quot;: &quot;REQUIRED-FIELD&quot;  },
                         &quot;nc&quot;: { &quot;hypervisor&quot;: &quot;kvm&quot;  } 
   }
}</defaultValue>
        </hudson.model.TextParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.7.2">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>cat &gt; config.json &lt;&lt;EOF
$configuration
EOF</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/usr/bin/python
import json
import os
json_file = open(&quot;config.json&quot;)
config = json.loads(json_file.read())
json_file.close()
if &quot;install-type&quot; not in config[&quot;eucalyptus&quot;]:
    config[&quot;eucalyptus&quot;][&quot;install-type&quot;] = os.environ[&apos;method&apos;]
config[&quot;eucalyptus&quot;][&quot;topology&quot;] = {}
config[&quot;eucalyptus&quot;][&quot;topology&quot;][&quot;clc-1&quot;] = os.environ[&apos;frontend&apos;]
config[&quot;eucalyptus&quot;][&quot;topology&quot;][&quot;walrus&quot;] = os.environ[&apos;frontend&apos;]
config[&quot;eucalyptus&quot;][&quot;topology&quot;][&quot;clusters&quot;] = {}
config[&quot;eucalyptus&quot;][&quot;topology&quot;][&quot;clusters&quot;][&quot;default&quot;] = {}
config[&quot;eucalyptus&quot;][&quot;topology&quot;][&quot;clusters&quot;][&quot;default&quot;][&quot;cc-1&quot;] = os.environ[&apos;frontend&apos;]
config[&quot;eucalyptus&quot;][&quot;topology&quot;][&quot;clusters&quot;][&quot;default&quot;][&quot;sc-1&quot;] = os.environ[&apos;frontend&apos;]
config[&quot;eucalyptus&quot;][&quot;topology&quot;][&quot;clusters&quot;][&quot;default&quot;][&quot;nodes&quot;] = os.environ[&apos;node&apos;]
json_file = open(&quot;config.json&quot;, &apos;w&apos;)
json_file.write(json.dumps(config))</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>if [ $password ];then
    knife bootstrap $frontend -no-host-key-verify -r &quot;role[frontend]&quot; -j &quot;`cat config.json`&quot; -P $password
    knife bootstrap $node --no-host-key-verify -r &quot;role[node]&quot; -j &quot;`cat config.json`&quot; -P $password
else
    knife bootstrap $frontend --no-host-key-verify -r &quot;role[frontend]&quot; -j &quot;`cat config.json`&quot;
    knife bootstrap $node --no-host-key-verify -r &quot;role[node]&quot; -j &quot;`cat config.json`&quot;
fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.ws__cleanup.WsCleanup plugin="ws-cleanup@0.16">
      <deleteDirs>false</deleteDirs>
      <skipWhenFailed>false</skipWhenFailed>
      <cleanWhenSuccess>true</cleanWhenSuccess>
      <cleanWhenUnstable>true</cleanWhenUnstable>
      <cleanWhenFailure>true</cleanWhenFailure>
      <cleanWhenNotBuilt>true</cleanWhenNotBuilt>
      <cleanWhenAborted>true</cleanWhenAborted>
      <notFailBuild>false</notFailBuild>
      <cleanupMatrixParent>false</cleanupMatrixParent>
    </hudson.plugins.ws__cleanup.WsCleanup>
  </publishers>
  <buildWrappers/>
</project>